{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","index","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","htmlFor","type","placeholder","value","onChange","target","checked","currentTarget","Footer","to","About","App","showAddTask","setshowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bccf9d8a.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n\treturn (\r\n\t\t<button\r\n\t\t\tonClick={onClick}\r\n\t\t\tstyle={{ backgroundColor: color }}\r\n\t\t\tclassName='btn'\r\n\t\t>\r\n\t\t\t{text}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nButton.defaultProps = {\r\n\tcolor: 'steelblue',\r\n};\r\n\r\nButton.propTypes = {\r\n\ttext: PropTypes.string,\r\n\tcolor: PropTypes.string,\r\n\tonClick: PropTypes.func,\r\n};\r\nexport default Button;\r\n","import PropTypes from 'prop-types';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Button from './Button';\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n\tconst location=useLocation()\r\n\treturn (\r\n\t\t<header className='header'>\r\n\t\t\t<h1>{title}</h1>\r\n\t\t{location.pathname==='/' && <Button\r\n\t\t\t\tcolor={showAdd ? 'red' : 'green'}\r\n\t\t\t\ttext={showAdd ? 'リストに戻る' : '新しいタスクを追加'}\r\n\t\t\t\tonClick={onAdd}\r\n\t\t\t/>}\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nHeader.defaultProps = {\r\n\ttitle: 'ToDoリスト',\r\n};\r\n\r\n// Header.PropTypes = {\r\n// \ttitle: PropTypes.string,\r\n// };\r\n\r\n//CSS in JS\r\n// const headingStyle = { color: 'red', backgroundColor: 'black' };\r\nexport default Header;\r\n","import { FaTimes } from 'react-icons/fa';\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={`task ${task.reminder ? 'reminder' : ''}`}\r\n\t\t\tonDoubleClick={() => onToggle(task.id)}\r\n\t\t>\r\n\t\t\t<h3>\r\n\t\t\t\t{task.text}\r\n\t\t\t\t<FaTimes\r\n\t\t\t\t\tstyle={{ color: 'red', cursor: 'pointer' }}\r\n\t\t\t\t\tonClick={() => onDelete(task.id)}\r\n\t\t\t\t/>\r\n\t\t\t</h3>\r\n\t\t\t<p>{task.day}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Task;\r\n","import Task from './Task';\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{tasks.map((task, index) => (\r\n\t\t\t\t<Task\r\n\t\t\t\t\tkey={index}\r\n\t\t\t\t\ttask={task}\r\n\t\t\t\t\tonDelete={onDelete}\r\n\t\t\t\t\tonToggle={onToggle}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Tasks;\r\n","import { useState } from 'react';\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n\tconst [text, setText] = useState('');\r\n\tconst [day, setDay] = useState('');\r\n\tconst [reminder, setReminder] = useState(false);\r\n\tconst onSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (!text) {\r\n\t\t\talert('新しいタスクを追加してください');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tonAdd({ text, day, reminder });\r\n\r\n\t\tsetText('');\r\n\t\tsetDay('');\r\n\t\tsetReminder(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form className='add-form' onSubmit={onSubmit}>\r\n\t\t\t<div className='form-control'>\r\n\t\t\t\t<label htmlFor=''>タスク</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tplaceholder='新しいタスク'\r\n\t\t\t\t\tvalue={text}\r\n\t\t\t\t\tonChange={(e) => setText(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='form-control'>\r\n\t\t\t\t<label htmlFor=''>日付と時刻</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tplaceholder='11月23日　14:30'\r\n\t\t\t\t\tvalue={day}\r\n\t\t\t\t\tonChange={(e) => setDay(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='form-control form-control-check'>\r\n\t\t\t\t<label htmlFor=''>リマインダー</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='checkbox' checked={reminder}\r\n\t\t\t\t\tvalue={reminder}\r\n\t\t\t\t\tonChange={(e) => setReminder(e.currentTarget.checked)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<input type='submit' value='タスクを追加' className='btn btn-block' />\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default AddTask;\r\n","import { Link } from 'react-router-dom';\r\n\r\nconst Footer = () => {\r\n\treturn (\r\n\t\t<footer>\r\n\t\t\t<p>Copyright &copy; 2021</p>\r\n\t\t\t<Link to='/about'>About</Link>\r\n\t\t</footer>\r\n\t);\r\n};\r\n\r\nexport default Footer;\r\n","import { Link } from 'react-router-dom';\r\n\r\nconst About = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4>Version 1.0.0</h4>\r\n\t\t\t<Link to='/'>戻る</Link>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default About;\r\n","import { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Header from './components/Header';\r\nimport Tasks from './components/Tasks';\r\nimport AddTask from './components/AddTask';\r\nimport Footer from './components/Footer';\r\nimport About from './components/About';\r\n\r\nconst App = () => {\r\n\tconst [showAddTask, setshowAddTask] = useState(false);\r\n\tconst [tasks, setTasks] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getTasks = async () => {\r\n\t\t\tconst tasksFromServer = await fetchTasks();\r\n\t\t\tsetTasks(tasksFromServer);\r\n\t\t};\r\n\t\tgetTasks();\r\n\t}, []);\r\n\r\n\t// Fetch Tasks\r\n\tconst fetchTasks = async () => {\r\n\t\tconst res = await fetch('http://localhost:5000/tasks');\r\n\t\tconst data = await res.json();\r\n\r\n\t\treturn data;\r\n\t};\r\n\r\n\t// Fetch Task\r\n\tconst fetchTask = async (id) => {\r\n\t\tconst res = await fetch(`http://localhost:5000/tasks/${id}`);\r\n\t\tconst data = await res.json();\r\n\r\n\t\treturn data;\r\n\t};\r\n\r\n\t// Add Task\r\n\tconst addTask = async (task) => {\r\n\t\t// const id = Math.floor(Math.random() * 10000) + 1;\r\n\t\t// const newTask = { id, ...task };\r\n\t\t// setTasks([...tasks, newTask]);\r\n\t\tconst res = await fetch('http://localhost:5000/tasks', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(task),\r\n\t\t});\r\n\t\tconst data = await res.json();\r\n\t\tsetTasks([...tasks, data]);\r\n\t};\r\n\r\n\t// Delete Task\r\n\tconst deleteTask = async (id) => {\r\n\t\tawait fetch(`http://localhost:5000/tasks/${id}`, {\r\n\t\t\tmethod: 'DELETE',\r\n\t\t});\r\n\r\n\t\tsetTasks(tasks.filter((task) => task.id !== id));\r\n\t};\r\n\r\n\t// Toggle Reminder\r\n\tconst toggleReminder = async (id) => {\r\n\t\tconst taskToToggle = await fetchTask(id);\r\n\t\tconst updTask = { ...taskToToggle, reminder: !taskToToggle.reminder };\r\n\r\n\t\tconst res = await fetch(`http://localhost:5000/tasks/${id}`, {\r\n\t\t\tmethod: 'PUT',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(updTask),\r\n\t\t});\r\n\t\tconst data = await res.json();\r\n\r\n\t\tsetTasks(\r\n\t\t\ttasks.map((task) =>\r\n\t\t\t\ttask.id === id ? { ...task, reminder: !data.reminder } : task\r\n\t\t\t)\r\n\t\t);\r\n\t};\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<Header\r\n\t\t\t\t\tonAdd={() => setshowAddTask(!showAddTask)}\r\n\t\t\t\t\tshowAdd={showAddTask}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Route\r\n\t\t\t\t\tpath='/'\r\n\t\t\t\t\texact\r\n\t\t\t\t\trender={(props) => (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t{showAddTask && <AddTask onAdd={addTask} />}\r\n\t\t\t\t\t\t\t{tasks.length > 0 ? (\r\n\t\t\t\t\t\t\t\t<Tasks\r\n\t\t\t\t\t\t\t\t\ttasks={tasks}\r\n\t\t\t\t\t\t\t\t\tonDelete={deleteTask}\r\n\t\t\t\t\t\t\t\t\tonToggle={toggleReminder}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t'タスクがありません'\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t\t<Route path='/about' component={About} />\r\n\t\t\t\t<Footer />\r\n\t\t\t</div>\r\n\t\t</Router>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}